/*
 * weather.gov API
 *
 * weather.gov API
 *
 * The version of the OpenAPI document: 1.11.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing Observation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ObservationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Observation
        //private Observation instance;

        public ObservationTests()
        {
            // TODO uncomment below to create an instance of Observation
            //instance = new Observation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Observation
        /// </summary>
        [Fact]
        public void ObservationInstanceTest()
        {
            // TODO uncomment below to test "IsType" Observation
            //Assert.IsType<Observation>(instance);
        }

        /// <summary>
        /// Test the property 'Context'
        /// </summary>
        [Fact]
        public void ContextTest()
        {
            // TODO unit test for the property 'Context'
        }

        /// <summary>
        /// Test the property 'Geometry'
        /// </summary>
        [Fact]
        public void GeometryTest()
        {
            // TODO unit test for the property 'Geometry'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Elevation'
        /// </summary>
        [Fact]
        public void ElevationTest()
        {
            // TODO unit test for the property 'Elevation'
        }

        /// <summary>
        /// Test the property 'Station'
        /// </summary>
        [Fact]
        public void StationTest()
        {
            // TODO unit test for the property 'Station'
        }

        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }

        /// <summary>
        /// Test the property 'RawMessage'
        /// </summary>
        [Fact]
        public void RawMessageTest()
        {
            // TODO unit test for the property 'RawMessage'
        }

        /// <summary>
        /// Test the property 'TextDescription'
        /// </summary>
        [Fact]
        public void TextDescriptionTest()
        {
            // TODO unit test for the property 'TextDescription'
        }

        /// <summary>
        /// Test the property 'Icon'
        /// </summary>
        [Fact]
        public void IconTest()
        {
            // TODO unit test for the property 'Icon'
        }

        /// <summary>
        /// Test the property 'PresentWeather'
        /// </summary>
        [Fact]
        public void PresentWeatherTest()
        {
            // TODO unit test for the property 'PresentWeather'
        }

        /// <summary>
        /// Test the property 'Temperature'
        /// </summary>
        [Fact]
        public void TemperatureTest()
        {
            // TODO unit test for the property 'Temperature'
        }

        /// <summary>
        /// Test the property 'Dewpoint'
        /// </summary>
        [Fact]
        public void DewpointTest()
        {
            // TODO unit test for the property 'Dewpoint'
        }

        /// <summary>
        /// Test the property 'WindDirection'
        /// </summary>
        [Fact]
        public void WindDirectionTest()
        {
            // TODO unit test for the property 'WindDirection'
        }

        /// <summary>
        /// Test the property 'WindSpeed'
        /// </summary>
        [Fact]
        public void WindSpeedTest()
        {
            // TODO unit test for the property 'WindSpeed'
        }

        /// <summary>
        /// Test the property 'WindGust'
        /// </summary>
        [Fact]
        public void WindGustTest()
        {
            // TODO unit test for the property 'WindGust'
        }

        /// <summary>
        /// Test the property 'BarometricPressure'
        /// </summary>
        [Fact]
        public void BarometricPressureTest()
        {
            // TODO unit test for the property 'BarometricPressure'
        }

        /// <summary>
        /// Test the property 'SeaLevelPressure'
        /// </summary>
        [Fact]
        public void SeaLevelPressureTest()
        {
            // TODO unit test for the property 'SeaLevelPressure'
        }

        /// <summary>
        /// Test the property 'Visibility'
        /// </summary>
        [Fact]
        public void VisibilityTest()
        {
            // TODO unit test for the property 'Visibility'
        }

        /// <summary>
        /// Test the property 'MaxTemperatureLast24Hours'
        /// </summary>
        [Fact]
        public void MaxTemperatureLast24HoursTest()
        {
            // TODO unit test for the property 'MaxTemperatureLast24Hours'
        }

        /// <summary>
        /// Test the property 'MinTemperatureLast24Hours'
        /// </summary>
        [Fact]
        public void MinTemperatureLast24HoursTest()
        {
            // TODO unit test for the property 'MinTemperatureLast24Hours'
        }

        /// <summary>
        /// Test the property 'PrecipitationLastHour'
        /// </summary>
        [Fact]
        public void PrecipitationLastHourTest()
        {
            // TODO unit test for the property 'PrecipitationLastHour'
        }

        /// <summary>
        /// Test the property 'PrecipitationLast3Hours'
        /// </summary>
        [Fact]
        public void PrecipitationLast3HoursTest()
        {
            // TODO unit test for the property 'PrecipitationLast3Hours'
        }

        /// <summary>
        /// Test the property 'PrecipitationLast6Hours'
        /// </summary>
        [Fact]
        public void PrecipitationLast6HoursTest()
        {
            // TODO unit test for the property 'PrecipitationLast6Hours'
        }

        /// <summary>
        /// Test the property 'RelativeHumidity'
        /// </summary>
        [Fact]
        public void RelativeHumidityTest()
        {
            // TODO unit test for the property 'RelativeHumidity'
        }

        /// <summary>
        /// Test the property 'WindChill'
        /// </summary>
        [Fact]
        public void WindChillTest()
        {
            // TODO unit test for the property 'WindChill'
        }

        /// <summary>
        /// Test the property 'HeatIndex'
        /// </summary>
        [Fact]
        public void HeatIndexTest()
        {
            // TODO unit test for the property 'HeatIndex'
        }

        /// <summary>
        /// Test the property 'CloudLayers'
        /// </summary>
        [Fact]
        public void CloudLayersTest()
        {
            // TODO unit test for the property 'CloudLayers'
        }
    }
}
