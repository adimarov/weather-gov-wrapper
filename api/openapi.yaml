openapi: 3.0.3
info:
  description: weather.gov API
  title: weather.gov API
  version: 1.11.1
externalDocs:
  description: Full API documentation
  url: https://www.weather.gov/documentation/services-web-api
servers:
- description: Production server
  url: https://api.weather.gov
security:
- userAgent: []
paths:
  /alerts:
    get:
      description: Returns all alerts
      operationId: alerts_query
      parameters:
      - deprecated: true
        description: List only active alerts (use /alerts/active endpoints instead)
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: Start time
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End time
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Status (actual, exercise, system, test, draft)"
        explode: false
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - actual
            - exercise
            - system
            - test
            - draft
            type: string
          type: array
        style: form
      - description: "Message type (alert, update, cancel)"
        explode: false
        in: query
        name: message_type
        required: false
        schema:
          items:
            enum:
            - alert
            - update
            - cancel
            type: string
          type: array
        style: form
      - description: Event name
        explode: false
        in: query
        name: event
        required: false
        schema:
          items:
            pattern: "^[A-Za-z0-9 ]+$"
            type: string
          type: array
        style: form
      - description: Event code
        explode: false
        in: query
        name: code
        required: false
        schema:
          items:
            pattern: "^\\w{3}$"
            type: string
          type: array
        style: form
      - description: |
          State/territory code or marine area code
          This parameter is incompatible with the following parameters: point, region, region_type, zone
        explode: false
        in: query
        name: area
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AreaCode'
          type: array
        style: form
      - description: |
          Point (latitude,longitude)
          This parameter is incompatible with the following parameters: area, region, region_type, zone
        explode: true
        in: query
        name: point
        required: false
        schema:
          $ref: '#/components/schemas/PointString'
        style: form
      - description: |
          Marine region code
          This parameter is incompatible with the following parameters: area, point, region_type, zone
        explode: false
        in: query
        name: region
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MarineRegionCode'
          type: array
        style: form
      - description: |
          Region type (land or marine)
          This parameter is incompatible with the following parameters: area, point, region, zone
        explode: true
        in: query
        name: region_type
        required: false
        schema:
          enum:
          - land
          - marine
          type: string
        style: form
      - description: |
          Zone ID (forecast or county)
          This parameter is incompatible with the following parameters: area, point, region, region_type
        explode: false
        in: query
        name: zone
        required: false
        schema:
          items:
            $ref: '#/components/schemas/NWSZoneID'
          type: array
        style: form
      - description: "Urgency (immediate, expected, future, past, unknown)"
        explode: false
        in: query
        name: urgency
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AlertUrgency'
          type: array
        style: form
      - description: "Severity (extreme, severe, moderate, minor, unknown)"
        explode: false
        in: query
        name: severity
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AlertSeverity'
          type: array
        style: form
      - description: "Certainty (observed, likely, possible, unlikely, unknown)"
        explode: false
        in: query
        name: certainty
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AlertCertainty'
          type: array
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Pagination cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionJsonLd'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/AlertAtomFeed'
          description: A collection of alerts.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
          x-url-content-negotiation-extensions:
            json: application/geo+json
            atom: application/atom+xml
        "301":
          description: Certain common queries may be redirected to discrete URLs
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/active:
    get:
      description: Returns all currently active alerts
      operationId: alerts_active
      parameters:
      - description: "Status (actual, exercise, system, test, draft)"
        explode: false
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - actual
            - exercise
            - system
            - test
            - draft
            type: string
          type: array
        style: form
      - description: "Message type (alert, update, cancel)"
        explode: false
        in: query
        name: message_type
        required: false
        schema:
          items:
            enum:
            - alert
            - update
            - cancel
            type: string
          type: array
        style: form
      - description: Event name
        explode: false
        in: query
        name: event
        required: false
        schema:
          items:
            pattern: "^[A-Za-z0-9 ]+$"
            type: string
          type: array
        style: form
      - description: Event code
        explode: false
        in: query
        name: code
        required: false
        schema:
          items:
            pattern: "^\\w{3}$"
            type: string
          type: array
        style: form
      - description: |
          State/territory code or marine area code
          This parameter is incompatible with the following parameters: point, region, region_type, zone
        explode: false
        in: query
        name: area
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AreaCode'
          type: array
        style: form
      - description: |
          Point (latitude,longitude)
          This parameter is incompatible with the following parameters: area, region, region_type, zone
        explode: true
        in: query
        name: point
        required: false
        schema:
          $ref: '#/components/schemas/PointString'
        style: form
      - description: |
          Marine region code
          This parameter is incompatible with the following parameters: area, point, region_type, zone
        explode: false
        in: query
        name: region
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MarineRegionCode'
          type: array
        style: form
      - description: |
          Region type (land or marine)
          This parameter is incompatible with the following parameters: area, point, region, zone
        explode: true
        in: query
        name: region_type
        required: false
        schema:
          enum:
          - land
          - marine
          type: string
        style: form
      - description: |
          Zone ID (forecast or county)
          This parameter is incompatible with the following parameters: area, point, region, region_type
        explode: false
        in: query
        name: zone
        required: false
        schema:
          items:
            $ref: '#/components/schemas/NWSZoneID'
          type: array
        style: form
      - description: "Urgency (immediate, expected, future, past, unknown)"
        explode: false
        in: query
        name: urgency
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AlertUrgency'
          type: array
        style: form
      - description: "Severity (extreme, severe, moderate, minor, unknown)"
        explode: false
        in: query
        name: severity
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AlertSeverity'
          type: array
        style: form
      - description: "Certainty (observed, likely, possible, unlikely, unknown)"
        explode: false
        in: query
        name: certainty
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AlertCertainty'
          type: array
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          maximum: 500
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionJsonLd'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/AlertAtomFeed'
          description: A collection of alerts.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
          x-url-content-negotiation-extensions:
            json: application/geo+json
            atom: application/atom+xml
        "301":
          description: Certain common queries may be redirected to discrete URLs
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/active/count:
    get:
      description: Returns info on the number of active alerts
      operationId: alerts_active_count
      parameters: []
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/alerts_active_count_200_response'
          description: A data structure showing the counts of active alerts broken
            down by various categories
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/active/zone/{zoneId}:
    get:
      description: Returns active alerts for the given NWS public zone or county
      operationId: alerts_active_zone
      parameters:
      - description: NWS public zone/county identifier
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneID'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionJsonLd'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/AlertAtomFeed'
          description: A collection of alerts.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
          x-url-content-negotiation-extensions:
            json: application/geo+json
            atom: application/atom+xml
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/active/area/{area}:
    get:
      description: Returns active alerts for the given area (state or marine area)
      operationId: alerts_active_area
      parameters:
      - description: State/area ID
        explode: false
        in: path
        name: area
        required: true
        schema:
          $ref: '#/components/schemas/AreaCode'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionJsonLd'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/AlertAtomFeed'
          description: A collection of alerts.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
          x-url-content-negotiation-extensions:
            json: application/geo+json
            atom: application/atom+xml
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/active/region/{region}:
    get:
      description: Returns active alerts for the given marine region
      operationId: alerts_active_region
      parameters:
      - description: Marine region ID
        explode: false
        in: path
        name: region
        required: true
        schema:
          $ref: '#/components/schemas/MarineRegionCode'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AlertCollectionJsonLd'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/AlertAtomFeed'
          description: A collection of alerts.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
          x-url-content-negotiation-extensions:
            json: application/geo+json
            atom: application/atom+xml
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/types:
    get:
      description: Returns a list of alert types
      operationId: alerts_types
      parameters: []
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/alerts_types_200_response'
          description: A list of recognized event types
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /alerts/{id}:
    get:
      description: Returns a specific alert
      operationId: alerts_single
      parameters:
      - description: Alert identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/AlertId'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/AlertGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AlertJsonLd'
            application/cap+xml:
              schema:
                $ref: '#/components/schemas/AlertCap'
          description: An alert record
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
          x-url-content-negotiation-extensions:
            json: application/geo+json
            cap: application/cap+xml
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/cwsus/{cwsuId}:
    get:
      description: Returns metadata about a Center Weather Service Unit
      operationId: cwsu
      parameters:
      - description: NWS CWSU ID
        explode: false
        in: path
        name: cwsuId
        required: true
        schema:
          $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CenterWeatherServiceUnitJsonLd'
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/cwsus/{cwsuId}/cwas:
    get:
      description: Returns a list of Center Weather Advisories from a CWSU
      operationId: cwas
      parameters:
      - description: NWS CWSU ID
        explode: false
        in: path
        name: cwsuId
        required: true
        schema:
          $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/CenterWeatherAdvisoryCollectionGeoJson'
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/cwsus/{cwsuId}/cwas/{date}/{sequence}:
    get:
      description: Returns a list of Center Weather Advisories from a CWSU
      operationId: cwa
      parameters:
      - description: NWS CWSU ID
        explode: false
        in: path
        name: cwsuId
        required: true
        schema:
          $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
        style: simple
      - description: Date (YYYY-MM-DD format)
        explode: false
        in: path
        name: date
        required: true
        schema:
          $ref: '#/components/schemas/Date'
        style: simple
      - description: Sequence number
        explode: false
        in: path
        name: sequence
        required: true
        schema:
          minimum: 100
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/CenterWeatherAdvisoryGeoJson'
            application/vnd.noaa.uswx+xml:
              schema: {}
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/sigmets:
    get:
      description: Returns a list of SIGMET/AIRMETs
      operationId: sigmetQuery
      parameters:
      - description: Start time
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End time
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Date (YYYY-MM-DD format)
        explode: true
        in: query
        name: date
        required: false
        schema:
          $ref: '#/components/schemas/Date'
        style: form
      - description: ATSU identifier
        explode: true
        in: query
        name: atsu
        required: false
        schema:
          $ref: '#/components/schemas/ATSUIdentifier'
        style: form
      - description: SIGMET sequence number
        explode: true
        in: query
        name: sequence
        required: false
        schema:
          $ref: '#/components/schemas/SigmetSequenceNumber'
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/SigmetCollectionGeoJson'
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/sigmets/{atsu}:
    get:
      description: Returns a list of SIGMET/AIRMETs for the specified ATSU
      operationId: sigmetsByATSU
      parameters:
      - description: ATSU identifier
        explode: false
        in: path
        name: atsu
        required: true
        schema:
          $ref: '#/components/schemas/ATSUIdentifier'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/SigmetCollectionGeoJson'
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/sigmets/{atsu}/{date}:
    get:
      description: Returns a list of SIGMET/AIRMETs for the specified ATSU for the
        specified date
      operationId: sigmetsByATSUByDate
      parameters:
      - description: ATSU identifier
        explode: false
        in: path
        name: atsu
        required: true
        schema:
          $ref: '#/components/schemas/ATSUIdentifier'
        style: simple
      - description: Date (YYYY-MM-DD format)
        explode: false
        in: path
        name: date
        required: true
        schema:
          $ref: '#/components/schemas/Date'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/SigmetCollectionGeoJson'
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /aviation/sigmets/{atsu}/{date}/{time}:
    get:
      description: Returns a specific SIGMET/AIRMET
      operationId: sigmet
      parameters:
      - description: ATSU identifier
        explode: false
        in: path
        name: atsu
        required: true
        schema:
          $ref: '#/components/schemas/ATSUIdentifier'
        style: simple
      - description: Date (YYYY-MM-DD format)
        explode: false
        in: path
        name: date
        required: true
        schema:
          $ref: '#/components/schemas/Date'
        style: simple
      - description: Time (HHMM format). This time is always specified in UTC (Zulu)
          time.
        explode: false
        in: path
        name: time
        required: true
        schema:
          $ref: '#/components/schemas/Time'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/SigmetGeoJson'
            application/vnd.noaa.uswx+xml:
              schema: {}
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /glossary:
    get:
      description: Returns glossary terms
      operationId: glossary
      parameters: []
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/glossary_200_response'
          description: A set of glossary terms
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /gridpoints/{wfo}/{x},{y}:
    get:
      description: Returns raw numerical forecast data for a 2.5km grid area
      operationId: gridpoint
      parameters:
      - description: Forecast office ID
        explode: false
        in: path
        name: wfo
        required: true
        schema:
          $ref: '#/components/schemas/NWSForecastOfficeId'
        style: simple
      - description: Forecast grid X coordinate
        explode: false
        in: path
        name: x
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: Forecast grid Y coordinate
        explode: false
        in: path
        name: "y"
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GridpointGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GridpointJsonLd'
          description: Gridpoint forecast data
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /gridpoints/{wfo}/{x},{y}/forecast:
    get:
      description: Returns a textual forecast for a 2.5km grid area
      operationId: gridpoint_forecast
      parameters:
      - description: Forecast office ID
        explode: false
        in: path
        name: wfo
        required: true
        schema:
          $ref: '#/components/schemas/NWSForecastOfficeId'
        style: simple
      - description: Forecast grid X coordinate
        explode: false
        in: path
        name: x
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: Forecast grid Y coordinate
        explode: false
        in: path
        name: "y"
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: |
          Enable future and experimental features (see documentation for more info):
          * forecast_temperature_qv: Represent temperature as QuantitativeValue
          * forecast_wind_speed_qv: Represent wind speed as QuantitativeValue
        explode: false
        in: header
        name: Feature-Flags
        required: false
        schema:
          items:
            enum:
            - forecast_temperature_qv
            - forecast_wind_speed_qv
            type: string
          type: array
        style: simple
      - description: Use US customary or SI (metric) units in textual output
        explode: true
        in: query
        name: units
        required: false
        schema:
          $ref: '#/components/schemas/GridpointForecastUnits'
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GridpointForecastGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GridpointForecastJsonLd'
            application/vnd.noaa.dwml+xml:
              schema: {}
          description: A forecast for a gridpoint.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /gridpoints/{wfo}/{x},{y}/forecast/hourly:
    get:
      description: Returns a textual hourly forecast for a 2.5km grid area
      operationId: gridpoint_forecast_hourly
      parameters:
      - description: Forecast office ID
        explode: false
        in: path
        name: wfo
        required: true
        schema:
          $ref: '#/components/schemas/NWSForecastOfficeId'
        style: simple
      - description: Forecast grid X coordinate
        explode: false
        in: path
        name: x
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: Forecast grid Y coordinate
        explode: false
        in: path
        name: "y"
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: |
          Enable future and experimental features (see documentation for more info):
          * forecast_temperature_qv: Represent temperature as QuantitativeValue
          * forecast_wind_speed_qv: Represent wind speed as QuantitativeValue
        explode: false
        in: header
        name: Feature-Flags
        required: false
        schema:
          items:
            enum:
            - forecast_temperature_qv
            - forecast_wind_speed_qv
            type: string
          type: array
        style: simple
      - description: Use US customary or SI (metric) units in textual output
        explode: true
        in: query
        name: units
        required: false
        schema:
          $ref: '#/components/schemas/GridpointForecastUnits'
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GridpointForecastGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GridpointForecastJsonLd'
            application/vnd.noaa.dwml+xml:
              schema: {}
          description: A forecast for a gridpoint.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /gridpoints/{wfo}/{x},{y}/stations:
    get:
      description: Returns a list of observation stations usable for a given 2.5km
        grid area
      operationId: gridpoint_stations
      parameters:
      - description: Forecast office ID
        explode: false
        in: path
        name: wfo
        required: true
        schema:
          $ref: '#/components/schemas/NWSForecastOfficeId'
        style: simple
      - description: Forecast grid X coordinate
        explode: false
        in: path
        name: x
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: Forecast grid Y coordinate
        explode: false
        in: path
        name: "y"
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Pagination cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationStationCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationStationCollectionJsonLd'
          description: A collection of observation stations.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /icons/{set}/{timeOfDay}/{first}:
    get:
      deprecated: true
      description: Returns a forecast icon. Icon services in API are deprecated.
      operationId: icons
      parameters:
      - description: "."
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      - description: "."
        explode: false
        in: path
        name: timeOfDay
        required: true
        schema:
          type: string
        style: simple
      - description: "."
        explode: false
        in: path
        name: first
        required: true
        schema:
          type: string
        style: simple
      - description: Font size
        explode: true
        in: query
        name: size
        required: false
        schema:
          $ref: '#/components/schemas/icons_size_parameter'
        style: form
      - description: Font size
        explode: true
        in: query
        name: fontsize
        required: false
        schema:
          maximum: 24
          minimum: 2
          type: integer
        style: form
      responses:
        "200":
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/BinaryFile'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /icons/{set}/{timeOfDay}/{first}/{second}:
    get:
      deprecated: true
      description: Returns a forecast icon. Icon services in API are deprecated.
      operationId: iconsDualCondition
      parameters:
      - description: "."
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      - description: "."
        explode: false
        in: path
        name: timeOfDay
        required: true
        schema:
          type: string
        style: simple
      - description: "."
        explode: false
        in: path
        name: first
        required: true
        schema:
          type: string
        style: simple
      - description: "."
        explode: false
        in: path
        name: second
        required: true
        schema:
          type: string
        style: simple
      - description: Font size
        explode: true
        in: query
        name: size
        required: false
        schema:
          $ref: '#/components/schemas/icons_size_parameter'
        style: form
      - description: Font size
        explode: true
        in: query
        name: fontsize
        required: false
        schema:
          maximum: 24
          minimum: 2
          type: integer
        style: form
      responses:
        "200":
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/BinaryFile'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /icons:
    get:
      deprecated: true
      description: Returns a list of icon codes and textual descriptions. Icon services
        in API are deprecated.
      operationId: icons_summary
      parameters: []
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/icons_summary_200_response'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /thumbnails/satellite/{area}:
    get:
      deprecated: true
      description: Returns a thumbnail image for a satellite region. Image services
        in API are deprecated.
      operationId: satellite_thumbnails
      parameters:
      - description: "."
        explode: false
        in: path
        name: area
        required: true
        schema:
          enum:
          - a
          - e
          - g
          - h
          - p
          - s
          - w
          type: string
        style: simple
      responses:
        "200":
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/BinaryFile'
          description: An image file
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations/{stationId}/observations:
    get:
      description: Returns a list of observations for a given station
      operationId: station_observation_list
      parameters:
      - description: Observation station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      - description: Start time
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End time
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationCollectionJsonLd'
          description: A collection of observation records.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations/{stationId}/observations/latest:
    get:
      description: Returns the latest observation for a station
      operationId: station_observation_latest
      parameters:
      - description: Observation station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      - description: Require QC
        explode: true
        in: query
        name: require_qc
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationJsonLd'
            application/vnd.noaa.uswx+xml:
              schema: {}
            application/vnd.noaa.obs+xml:
              schema: {}
          description: An observation record.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations/{stationId}/observations/{time}:
    get:
      description: Returns a single observation.
      operationId: station_observation_time
      parameters:
      - description: Observation station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp of requested observation
        explode: false
        in: path
        name: time
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationJsonLd'
            application/vnd.noaa.uswx+xml:
              schema: {}
            application/vnd.noaa.obs+xml:
              schema: {}
          description: An observation record.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations/{stationId}/tafs:
    get:
      description: Returns Terminal Aerodrome Forecasts for the specified airport
        station.
      operationId: tafs
      parameters:
      - description: Observation station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema: {}
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations/{stationId}/tafs/{date}/{time}:
    get:
      description: Returns a single Terminal Aerodrome Forecast.
      operationId: taf
      parameters:
      - description: Observation station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      - description: Date (YYYY-MM-DD format)
        explode: false
        in: path
        name: date
        required: true
        schema:
          $ref: '#/components/schemas/Date'
        style: simple
      - description: Time (HHMM format). This time is always specified in UTC (Zulu)
          time.
        explode: false
        in: path
        name: time
        required: true
        schema:
          $ref: '#/components/schemas/Time'
        style: simple
      responses:
        "200":
          content:
            application/vnd.wmo.iwxxm+xml:
              schema: {}
          description: success
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations:
    get:
      description: Returns a list of observation stations.
      operationId: obs_stations
      parameters:
      - description: Filter by observation station ID
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by state/marine area code
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AreaCode'
          type: array
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Pagination cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationStationCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationStationCollectionJsonLd'
          description: A collection of observation stations.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /stations/{stationId}:
    get:
      description: Returns metadata about a given observation station
      operationId: obs_station
      parameters:
      - description: Observation station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationStationGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationStationJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /offices/{officeId}:
    get:
      description: Returns metadata about a NWS forecast office
      operationId: office
      parameters:
      - description: NWS office ID
        explode: false
        in: path
        name: officeId
        required: true
        schema:
          $ref: '#/components/schemas/NWSOfficeId'
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Office'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /offices/{officeId}/headlines/{headlineId}:
    get:
      description: Returns a specific news headline for a given NWS office
      operationId: office_headline
      parameters:
      - description: NWS office ID
        explode: false
        in: path
        name: officeId
        required: true
        schema:
          $ref: '#/components/schemas/NWSOfficeId'
        style: simple
      - description: Headline record ID
        explode: false
        in: path
        name: headlineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OfficeHeadline'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /offices/{officeId}/headlines:
    get:
      description: Returns a list of news headlines for a given NWS office
      operationId: office_headlines
      parameters:
      - description: NWS office ID
        explode: false
        in: path
        name: officeId
        required: true
        schema:
          $ref: '#/components/schemas/NWSOfficeId'
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OfficeHeadlineCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /points/{point}:
    get:
      description: Returns metadata about a given latitude/longitude point
      operationId: point
      parameters:
      - description: "Point (latitude, longitude)"
        explode: false
        in: path
        name: point
        required: true
        schema:
          $ref: '#/components/schemas/PointString'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/PointGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PointJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /points/{point}/stations:
    get:
      deprecated: true
      description: Returns a list of observation stations for a given point
      operationId: point_stations
      parameters:
      - description: "Point (latitude, longitude)"
        explode: false
        in: path
        name: point
        required: true
        schema:
          $ref: '#/components/schemas/PointString'
        style: simple
      responses:
        "301":
          description: redirect to gridpoint stations
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/servers:
    get:
      description: Returns a list of radar servers
      operationId: radar_servers
      parameters:
      - description: Show records from specific reporting host
        explode: true
        in: query
        name: reportingHost
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/servers/{id}:
    get:
      description: Returns metadata about a given radar server
      operationId: radar_server
      parameters:
      - description: Server ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Show records from specific reporting host
        explode: true
        in: query
        name: reportingHost
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/stations:
    get:
      description: Returns a list of radar stations
      operationId: radar_stations
      parameters:
      - description: Limit results to a specific station type or types
        explode: false
        in: query
        name: stationType
        required: false
        schema:
          items:
            pattern: "^[A-Za-z0-9-]+$"
            type: string
          type: array
        style: form
      - description: Show RDA and latency info from specific reporting host
        explode: true
        in: query
        name: reportingHost
        required: false
        schema:
          type: string
        style: form
      - description: Show latency info from specific LDM host
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema: {}
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/stations/{stationId}:
    get:
      description: Returns metadata about a given radar station
      operationId: radar_station
      parameters:
      - description: Radar station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      - description: Show RDA and latency info from specific reporting host
        explode: true
        in: query
        name: reportingHost
        required: false
        schema:
          type: string
        style: form
      - description: Show latency info from specific LDM host
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema: {}
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/stations/{stationId}/alarms:
    get:
      description: Returns metadata about a given radar station alarms
      operationId: radar_station_alarms
      parameters:
      - description: Radar station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/queues/{host}:
    get:
      description: Returns metadata about a given radar queue
      operationId: radar_queue
      parameters:
      - description: LDM host
        explode: false
        in: path
        name: host
        required: true
        schema:
          type: string
        style: simple
      - description: Record limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Range for arrival time
        explode: true
        in: query
        name: arrived
        required: false
        schema:
          $ref: '#/components/schemas/ISO8601Interval'
        style: form
      - description: Range for creation time
        explode: true
        in: query
        name: created
        required: false
        schema:
          $ref: '#/components/schemas/ISO8601Interval'
        style: form
      - description: Range for publish time
        explode: true
        in: query
        name: published
        required: false
        schema:
          $ref: '#/components/schemas/ISO8601Interval'
        style: form
      - description: Station identifier
        explode: true
        in: query
        name: station
        required: false
        schema:
          type: string
        style: form
      - description: Record type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Originating product feed
        explode: true
        in: query
        name: feed
        required: false
        schema:
          type: string
        style: form
      - description: Resolution version
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /radar/profilers/{stationId}:
    get:
      description: Returns metadata about a given radar wind profiler
      operationId: radar_profiler
      parameters:
      - description: Profiler station ID
        explode: false
        in: path
        name: stationId
        required: true
        schema:
          type: string
        style: simple
      - description: Time interval
        explode: true
        in: query
        name: time
        required: false
        schema:
          $ref: '#/components/schemas/ISO8601Interval'
        style: form
      - description: Averaging interval
        explode: true
        in: query
        name: interval
        required: false
        schema:
          $ref: '#/components/schemas/ISO8601Duration'
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              schema: {}
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products:
    get:
      description: Returns a list of text products
      operationId: products_query
      parameters:
      - description: Location id
        explode: false
        in: query
        name: location
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Start time
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End time
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Issuing office
        explode: false
        in: query
        name: office
        required: false
        schema:
          items:
            pattern: "^[A-Z]{4}$"
            type: string
          type: array
        style: form
      - description: WMO id code
        explode: false
        in: query
        name: wmoid
        required: false
        schema:
          items:
            pattern: "^[A-Z]{4}\\d{2}$"
            type: string
          type: array
        style: form
      - description: Product code
        explode: false
        in: query
        name: type
        required: false
        schema:
          items:
            pattern: "^\\w{3}$"
            type: string
          type: array
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/locations:
    get:
      description: Returns a list of valid text product issuance locations
      operationId: product_locations
      parameters: []
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductLocationCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/types:
    get:
      description: Returns a list of valid text product types and codes
      operationId: product_types
      parameters: []
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductTypeCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/{productId}:
    get:
      description: Returns a specific text product
      operationId: product
      parameters:
      - description: "."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProduct'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/types/{typeId}:
    get:
      description: Returns a list of text products of a given type
      operationId: products_type
      parameters:
      - description: "."
        explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/types/{typeId}/locations:
    get:
      description: Returns a list of valid text product issuance locations for a given
        product type
      operationId: products_type_locations
      parameters:
      - description: "."
        explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductLocationCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/locations/{locationId}/types:
    get:
      description: Returns a list of valid text product types for a given issuance
        location
      operationId: location_products
      parameters:
      - description: "."
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductTypeCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /products/types/{typeId}/locations/{locationId}:
    get:
      description: Returns a list of text products of a given type for a given issuance
        location
      operationId: products_type_location
      parameters:
      - description: "."
        explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      - description: "."
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TextProductCollection'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /zones:
    get:
      description: Returns a list of zones
      operationId: zone_list
      parameters:
      - description: Zone ID (forecast or county)
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            $ref: '#/components/schemas/NWSZoneID'
          type: array
        style: form
      - description: State/marine area code
        explode: false
        in: query
        name: area
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AreaCode'
          type: array
        style: form
      - description: Region code
        explode: false
        in: query
        name: region
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RegionCode'
          type: array
        style: form
      - description: Zone type
        explode: false
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/NWSZoneType'
          type: array
        style: form
      - description: "Point (latitude,longitude)"
        explode: true
        in: query
        name: point
        required: false
        schema:
          $ref: '#/components/schemas/PointString'
        style: form
      - description: Include geometry in results (true/false)
        explode: true
        in: query
        name: include_geometry
        required: false
        schema:
          type: boolean
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Effective date/time
        explode: true
        in: query
        name: effective
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /zones/{type}:
    get:
      description: Returns a list of zones of a given type
      operationId: zone_list_type
      parameters:
      - description: Zone type
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneType'
        style: simple
      - description: Zone ID (forecast or county)
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            $ref: '#/components/schemas/NWSZoneID'
          type: array
        style: form
      - description: State/marine area code
        explode: false
        in: query
        name: area
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AreaCode'
          type: array
        style: form
      - description: Region code
        explode: false
        in: query
        name: region
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RegionCode'
          type: array
        style: form
      - description: Zone type
        explode: false
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/NWSZoneType'
          type: array
        style: form
      - description: "Point (latitude,longitude)"
        explode: true
        in: query
        name: point
        required: false
        schema:
          $ref: '#/components/schemas/PointString'
        style: form
      - description: Include geometry in results (true/false)
        explode: true
        in: query
        name: include_geometry
        required: false
        schema:
          type: boolean
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Effective date/time
        explode: true
        in: query
        name: effective
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /zones/{type}/{zoneId}:
    get:
      description: Returns metadata about a given zone
      operationId: zone
      parameters:
      - description: Zone type
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneType'
        style: simple
      - description: NWS public zone/county identifier
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneID'
        style: simple
      - description: Effective date/time
        explode: true
        in: query
        name: effective
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ZoneGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ZoneJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /zones/{type}/{zoneId}/forecast:
    get:
      description: Returns the current zone forecast for a given zone
      operationId: zone_forecast
      parameters:
      - description: Zone type
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: NWS public zone/county identifier
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneID'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ZoneForecastGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ZoneForecastJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /zones/forecast/{zoneId}/observations:
    get:
      description: Returns a list of observations for a given zone
      operationId: zone_obs
      parameters:
      - description: NWS public zone/county identifier
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneID'
        style: simple
      - description: Start date/time
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End date/time
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 500
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationCollectionJsonLd'
          description: success
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
  /zones/forecast/{zoneId}/stations:
    get:
      description: Returns a list of observation stations for a given zone
      operationId: zone_stations
      parameters:
      - description: NWS public zone/county identifier
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          $ref: '#/components/schemas/NWSZoneID'
        style: simple
      - description: Limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Pagination cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/ObservationStationCollectionGeoJson'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObservationStationCollectionJsonLd'
          description: A collection of observation stations.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
          description: An error response.
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
            X-Request-Id:
              $ref: '#/components/headers/RequestId'
            X-Server-Id:
              $ref: '#/components/headers/ServerId'
components:
  headers:
    CorrelationId:
      description: |
        A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
      explode: false
      schema:
        type: string
      style: simple
    RequestId:
      description: |
        A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
      explode: false
      schema:
        type: string
      style: simple
    ServerId:
      description: |
        The identifier of the server that generated the response, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
      explode: false
      schema:
        type: string
      style: simple
  parameters:
    AlertArea:
      description: |
        State/territory code or marine area code
        This parameter is incompatible with the following parameters: point, region, region_type, zone
      explode: false
      in: query
      name: area
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AreaCode'
        type: array
      style: form
    AlertCertainty:
      description: "Certainty (observed, likely, possible, unlikely, unknown)"
      explode: false
      in: query
      name: certainty
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AlertCertainty'
        type: array
      style: form
    AlertCode:
      description: Event code
      explode: false
      in: query
      name: code
      required: false
      schema:
        items:
          pattern: "^\\w{3}$"
          type: string
        type: array
      style: form
    AlertEventName:
      description: Event name
      explode: false
      in: query
      name: event
      required: false
      schema:
        items:
          pattern: "^[A-Za-z0-9 ]+$"
          type: string
        type: array
      style: form
    AlertMessageType:
      description: "Message type (alert, update, cancel)"
      explode: false
      in: query
      name: message_type
      required: false
      schema:
        items:
          enum:
          - alert
          - update
          - cancel
          type: string
        type: array
      style: form
    AlertPoint:
      description: |
        Point (latitude,longitude)
        This parameter is incompatible with the following parameters: area, region, region_type, zone
      explode: true
      in: query
      name: point
      required: false
      schema:
        $ref: '#/components/schemas/PointString'
      style: form
    AlertRegion:
      description: |
        Marine region code
        This parameter is incompatible with the following parameters: area, point, region_type, zone
      explode: false
      in: query
      name: region
      required: false
      schema:
        items:
          $ref: '#/components/schemas/MarineRegionCode'
        type: array
      style: form
    AlertRegionType:
      description: |
        Region type (land or marine)
        This parameter is incompatible with the following parameters: area, point, region, zone
      explode: true
      in: query
      name: region_type
      required: false
      schema:
        enum:
        - land
        - marine
        type: string
      style: form
    AlertSeverity:
      description: "Severity (extreme, severe, moderate, minor, unknown)"
      explode: false
      in: query
      name: severity
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AlertSeverity'
        type: array
      style: form
    AlertStatus:
      description: "Status (actual, exercise, system, test, draft)"
      explode: false
      in: query
      name: status
      required: false
      schema:
        items:
          enum:
          - actual
          - exercise
          - system
          - test
          - draft
          type: string
        type: array
      style: form
    AlertUrgency:
      description: "Urgency (immediate, expected, future, past, unknown)"
      explode: false
      in: query
      name: urgency
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AlertUrgency'
        type: array
      style: form
    AlertZone:
      description: |
        Zone ID (forecast or county)
        This parameter is incompatible with the following parameters: area, point, region, region_type
      explode: false
      in: query
      name: zone
      required: false
      schema:
        items:
          $ref: '#/components/schemas/NWSZoneID'
        type: array
      style: form
    ATSUIdentifier:
      description: ATSU identifier
      explode: false
      in: path
      name: atsu
      required: true
      schema:
        $ref: '#/components/schemas/ATSUIdentifier'
      style: simple
    Date:
      description: Date (YYYY-MM-DD format)
      explode: false
      in: path
      name: date
      required: true
      schema:
        $ref: '#/components/schemas/Date'
      style: simple
    GridpointForecastFeatureFlags:
      description: |
        Enable future and experimental features (see documentation for more info):
        * forecast_temperature_qv: Represent temperature as QuantitativeValue
        * forecast_wind_speed_qv: Represent wind speed as QuantitativeValue
      explode: false
      in: header
      name: Feature-Flags
      required: false
      schema:
        items:
          enum:
          - forecast_temperature_qv
          - forecast_wind_speed_qv
          type: string
        type: array
      style: simple
    GridpointForecastUnits:
      description: Use US customary or SI (metric) units in textual output
      explode: true
      in: query
      name: units
      required: false
      schema:
        $ref: '#/components/schemas/GridpointForecastUnits'
      style: form
    GridpointWFO:
      description: Forecast office ID
      explode: false
      in: path
      name: wfo
      required: true
      schema:
        $ref: '#/components/schemas/NWSForecastOfficeId'
      style: simple
    GridpointX:
      description: Forecast grid X coordinate
      explode: false
      in: path
      name: x
      required: true
      schema:
        minimum: 0
        type: integer
      style: simple
    GridpointY:
      description: Forecast grid Y coordinate
      explode: false
      in: path
      name: "y"
      required: true
      schema:
        minimum: 0
        type: integer
      style: simple
    Limit:
      description: Limit
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 500
        maximum: 500
        minimum: 1
        type: integer
      style: form
    NWSCenterWeatherServiceUnitId:
      description: NWS CWSU ID
      explode: false
      in: path
      name: cwsuId
      required: true
      schema:
        $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
      style: simple
    NWSOfficeId:
      description: NWS office ID
      explode: false
      in: path
      name: officeId
      required: true
      schema:
        $ref: '#/components/schemas/NWSOfficeId'
      style: simple
    NWSZoneId:
      description: NWS public zone/county identifier
      explode: false
      in: path
      name: zoneId
      required: true
      schema:
        $ref: '#/components/schemas/NWSZoneID'
      style: simple
    ObservationStationId:
      description: Observation station ID
      explode: false
      in: path
      name: stationId
      required: true
      schema:
        type: string
      style: simple
    PaginationCursor:
      description: Pagination cursor
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        type: string
      style: form
    PathPoint:
      description: "Point (latitude, longitude)"
      explode: false
      in: path
      name: point
      required: true
      schema:
        $ref: '#/components/schemas/PointString'
      style: simple
    QueryDate:
      description: Date (YYYY-MM-DD format)
      explode: true
      in: query
      name: date
      required: false
      schema:
        $ref: '#/components/schemas/Date'
      style: form
    QueryStartTime:
      description: Start time
      explode: true
      in: query
      name: start
      required: false
      schema:
        format: date-time
        type: string
      style: form
    QueryEndTime:
      description: End time
      explode: true
      in: query
      name: end
      required: false
      schema:
        format: date-time
        type: string
      style: form
    SigmetSequenceNumber:
      description: SIGMET sequence number
      explode: false
      in: path
      name: sequence
      required: true
      schema:
        $ref: '#/components/schemas/SigmetSequenceNumber'
      style: simple
    Time:
      description: Time (HHMM format). This time is always specified in UTC (Zulu)
        time.
      explode: false
      in: path
      name: time
      required: true
      schema:
        $ref: '#/components/schemas/Time'
      style: simple
  responses:
    AlertCollection:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/AlertCollectionGeoJson'
        application/ld+json:
          schema:
            $ref: '#/components/schemas/AlertCollectionJsonLd'
        application/atom+xml:
          schema:
            $ref: '#/components/schemas/AlertAtomFeed'
      description: A collection of alerts.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/CorrelationId'
        X-Request-Id:
          $ref: '#/components/headers/RequestId'
        X-Server-Id:
          $ref: '#/components/headers/ServerId'
      x-url-content-negotiation-extensions:
        json: application/geo+json
        atom: application/atom+xml
    Error:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
      description: An error response.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/CorrelationId'
        X-Request-Id:
          $ref: '#/components/headers/RequestId'
        X-Server-Id:
          $ref: '#/components/headers/ServerId'
    GridpointForecast:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/GridpointForecastGeoJson'
        application/ld+json:
          schema:
            $ref: '#/components/schemas/GridpointForecastJsonLd'
        application/vnd.noaa.dwml+xml:
          schema: {}
      description: A forecast for a gridpoint.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/CorrelationId'
        X-Request-Id:
          $ref: '#/components/headers/RequestId'
        X-Server-Id:
          $ref: '#/components/headers/ServerId'
    Observation:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/ObservationGeoJson'
        application/ld+json:
          schema:
            $ref: '#/components/schemas/ObservationJsonLd'
        application/vnd.noaa.uswx+xml:
          schema: {}
        application/vnd.noaa.obs+xml:
          schema: {}
      description: An observation record.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/CorrelationId'
        X-Request-Id:
          $ref: '#/components/headers/RequestId'
        X-Server-Id:
          $ref: '#/components/headers/ServerId'
    ObservationCollection:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/ObservationCollectionGeoJson'
        application/ld+json:
          schema:
            $ref: '#/components/schemas/ObservationCollectionJsonLd'
      description: A collection of observation records.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/CorrelationId'
        X-Request-Id:
          $ref: '#/components/headers/RequestId'
        X-Server-Id:
          $ref: '#/components/headers/ServerId'
    ObservationStationCollection:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/ObservationStationCollectionGeoJson'
        application/ld+json:
          schema:
            $ref: '#/components/schemas/ObservationStationCollectionJsonLd'
      description: A collection of observation stations.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/CorrelationId'
        X-Request-Id:
          $ref: '#/components/headers/RequestId'
        X-Server-Id:
          $ref: '#/components/headers/ServerId'
  schemas:
    Alert:
      description: |
        An object representing a public alert message.
        Unless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2 specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more complete information.
        http://docs.oasis-open.org/emergency/cap/v1.2/CAP-v1.2-os.html http://docs.oasis-open.org/emergency/cap/v1.2/ipaws-profile/v1.0/cs01/cap-v1.2-ipaws-profile-cs01.html https://alerts.weather.gov/#technical-notes-v12
      properties:
        id:
          description: The identifier of the alert message.
          type: string
        areaDesc:
          description: A textual description of the area affected by the alert.
          type: string
        geocode:
          $ref: '#/components/schemas/Alert_geocode'
        affectedZones:
          description: |
            An array of API links for zones affected by the alert. This is an API-specific extension field and is not part of the CAP specification.
          items:
            format: uri
            type: string
          type: array
        references:
          description: A list of prior alerts that this alert updates or replaces.
          items:
            $ref: '#/components/schemas/Alert_references_inner'
          type: array
        sent:
          description: The time of the origination of the alert message.
          format: date-time
          type: string
        effective:
          description: The effective time of the information of the alert message.
          format: date-time
          type: string
        onset:
          description: The expected time of the beginning of the subject event of
            the alert message.
          format: date-time
          nullable: true
          type: string
        expires:
          description: The expiry time of the information of the alert message.
          format: date-time
          type: string
        ends:
          description: The expected end time of the subject event of the alert message.
          format: date-time
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/AlertStatus'
        messageType:
          $ref: '#/components/schemas/AlertMessageType'
        category:
          description: The code denoting the category of the subject event of the
            alert message.
          enum:
          - Met
          - Geo
          - Safety
          - Security
          - Rescue
          - Fire
          - Health
          - Env
          - Transport
          - Infra
          - CBRNE
          - Other
          type: string
        severity:
          $ref: '#/components/schemas/AlertSeverity'
        certainty:
          $ref: '#/components/schemas/AlertCertainty'
        urgency:
          $ref: '#/components/schemas/AlertUrgency'
        event:
          description: The text denoting the type of the subject event of the alert
            message.
          type: string
        sender:
          description: Email address of the NWS webmaster.
          type: string
        senderName:
          description: The text naming the originator of the alert message.
          type: string
        headline:
          description: The text headline of the alert message.
          nullable: true
          type: string
        description:
          description: The text describing the subject event of the alert message.
          type: string
        instruction:
          description: |
            The text describing the recommended action to be taken by recipients of the alert message.
          nullable: true
          type: string
        response:
          description: |
            The code denoting the type of action recommended for the target audience.
            This corresponds to responseType in the CAP specification.
          enum:
          - Shelter
          - Evacuate
          - Prepare
          - Execute
          - Avoid
          - Monitor
          - Assess
          - AllClear
          - None
          type: string
        parameters:
          additionalProperties:
            items: {}
            type: array
          description: |
            System-specific additional parameters associated with the alert message.
            The keys in this object correspond to parameter definitions in the NWS CAP specification.
          type: object
      type: object
    AlertCollection:
      properties:
        title:
          description: A title describing the alert collection
          type: string
        updated:
          description: The last time a change occurred to this collection
          format: date-time
          type: string
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    AlertCollectionGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeatureCollection'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/AlertCollectionGeoJson_allOf_features'
            type: array
        type: object
      - $ref: '#/components/schemas/AlertCollection'
    AlertCollectionJsonLd:
      allOf:
      - $ref: '#/components/schemas/AlertCollection'
      - properties:
          '@context':
            $ref: '#/components/schemas/JsonLdContext'
          '@graph':
            items:
              $ref: '#/components/schemas/Alert'
            type: array
        type: object
    AlertCap:
      type: object
    AlertGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/Alert'
        type: object
    AlertJsonLd:
      properties:
        '@graph':
          items:
            $ref: '#/components/schemas/Alert'
          type: array
      type: object
    AlertId:
      description: The identifier of the alert message.
      type: string
    AlertCertainty:
      enum:
      - Observed
      - Likely
      - Possible
      - Unlikely
      - Unknown
      type: string
    AlertMessageType:
      enum:
      - Alert
      - Update
      - Cancel
      - Ack
      - Error
      type: string
    AlertSeverity:
      enum:
      - Extreme
      - Severe
      - Moderate
      - Minor
      - Unknown
      type: string
    AlertStatus:
      enum:
      - Actual
      - Exercise
      - System
      - Test
      - Draft
      type: string
    AlertUrgency:
      enum:
      - Immediate
      - Expected
      - Future
      - Past
      - Unknown
      type: string
    AlertAtomEntry:
      description: An alert entry in an Atom feed
      properties:
        id:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        updated:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        published:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        author:
          $ref: '#/components/schemas/AlertAtomEntry_author'
        summary:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        event:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        sent:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        effective:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        expires:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        status:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        msgType:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        category:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        urgency:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        severity:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        certainty:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        areaDesc:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        polygon:
          type: string
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        geocode:
          items:
            $ref: '#/components/schemas/AlertXMLParameter'
          type: array
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
        parameter:
          items:
            $ref: '#/components/schemas/AlertXMLParameter'
          type: array
          xml:
            namespace: urn:oasis:names:tc:emergency:cap:1.2
      type: object
      xml:
        name: entry
        namespace: http://www.w3.org/2005/Atom
    AlertXMLParameter:
      properties:
        valueName:
          type: string
        value:
          type: string
      type: object
    AlertAtomFeed:
      description: An alert feed in Atom format
      properties:
        id:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        generator:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        updated:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        author:
          $ref: '#/components/schemas/AlertAtomFeed_author'
        title:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
        entry:
          items:
            $ref: '#/components/schemas/AlertAtomEntry'
          type: array
          xml:
            namespace: http://www.w3.org/2005/Atom
      type: object
      xml:
        name: feed
        namespace: http://www.w3.org/2005/Atom
    AreaCode:
      description: State/territory codes and marine area codes
      oneOf:
      - $ref: '#/components/schemas/StateTerritoryCode'
      - $ref: '#/components/schemas/MarineAreaCode'
    ATSUIdentifier:
      description: ATSU Identifier
      pattern: "^[A-Z]{3,4}$"
      type: string
    BinaryFile:
      format: binary
      type: string
    CenterWeatherAdvisoryCollectionGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeatureCollection'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/CenterWeatherAdvisoryCollectionGeoJson_allOf_features'
            type: array
        type: object
    CenterWeatherAdvisoryGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/CenterWeatherAdvisory'
        type: object
    CenterWeatherAdvisory:
      additionalProperties: false
      properties:
        id:
          type: string
        issueTime:
          format: date-time
          type: string
        cwsu:
          $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
        sequence:
          minimum: 101
          type: integer
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        observedProperty:
          type: string
        text:
          type: string
      type: object
    CenterWeatherServiceUnitJsonLd:
      $ref: '#/components/schemas/Office'
    Date:
      description: Date (in YYYY-MM-DD format).
      format: date
      type: string
    GeometryString:
      description: A geometry represented in Well-Known Text (WKT) format.
      format: wkt
      nullable: true
      type: string
    GeoJsonBoundingBox:
      description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
        on the GeoJSON format.
      items:
        type: number
      minItems: 4
      type: array
    GeoJsonCoordinate:
      description: A GeoJSON coordinate. Please refer to IETF RFC 7946 for information
        on the GeoJSON format.
      items:
        type: number
      minItems: 2
      type: array
    GeoJsonGeometry:
      description: A GeoJSON geometry object. Please refer to IETF RFC 7946 for information
        on the GeoJSON format.
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/GeoJSON_Point'
      - $ref: '#/components/schemas/GeoJSON_LineString'
      - $ref: '#/components/schemas/GeoJSON_Polygon'
      - $ref: '#/components/schemas/GeoJSON_MultiPoint'
      - $ref: '#/components/schemas/GeoJSON_MultiLineString'
      - $ref: '#/components/schemas/GeoJSON_MultiPolygon'
    GeoJsonFeature:
      additionalProperties: false
      description: A GeoJSON feature. Please refer to IETF RFC 7946 for information
        on the GeoJSON format.
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        id:
          format: uri
          type: string
        type:
          enum:
          - Feature
          type: string
        geometry:
          $ref: '#/components/schemas/GeoJsonGeometry'
        properties:
          type: object
      required:
      - geometry
      - properties
      - type
      type: object
    GeoJsonFeatureCollection:
      description: A GeoJSON feature collection. Please refer to IETF RFC 7946 for
        information on the GeoJSON format.
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        type:
          enum:
          - FeatureCollection
          type: string
        features:
          items:
            $ref: '#/components/schemas/GeoJsonFeature'
          type: array
      required:
      - features
      - type
      type: object
    GeoJsonLineString:
      description: A GeoJSON line string. Please refer to IETF RFC 7946 for information
        on the GeoJSON format.
      items:
        $ref: '#/components/schemas/GeoJsonCoordinate'
      minItems: 2
      type: array
    GeoJsonPolygon:
      description: A GeoJSON polygon. Please refer to IETF RFC 7946 for information
        on the GeoJSON format.
      items:
        items:
          $ref: '#/components/schemas/GeoJsonCoordinate'
        minItems: 4
        type: array
      type: array
    Gridpoint:
      additionalProperties:
        $ref: '#/components/schemas/GridpointQuantitativeValueLayer'
      description: |
        Raw forecast data for a 2.5km grid square.
        This is a list of all potential data layers that may appear. Some layers may not be present in all areas.
        * temperature
        * dewpoint
        * maxTemperature
        * minTemperature
        * relativeHumidity
        * apparentTemperature
        * heatIndex
        * windChill
        * wetBulbGlobeTemperature
        * skyCover
        * windDirection
        * windSpeed
        * windGust
        * weather
        * hazards: Watch and advisory products in effect
        * probabilityOfPrecipitation
        * quantitativePrecipitation
        * iceAccumulation
        * snowfallAmount
        * snowLevel
        * ceilingHeight
        * visibility
        * transportWindSpeed
        * transportWindDirection
        * mixingHeight
        * hainesIndex
        * lightningActivityLevel
        * twentyFootWindSpeed
        * twentyFootWindDirection
        * waveHeight
        * wavePeriod
        * waveDirection
        * primarySwellHeight
        * primarySwellDirection
        * secondarySwellHeight
        * secondarySwellDirection
        * wavePeriod2
        * windWaveHeight
        * dispersionIndex
        * pressure: Barometric pressure
        * probabilityOfTropicalStormWinds
        * probabilityOfHurricaneWinds
        * potentialOf15mphWinds
        * potentialOf25mphWinds
        * potentialOf35mphWinds
        * potentialOf45mphWinds
        * potentialOf20mphWindGusts
        * potentialOf30mphWindGusts
        * potentialOf40mphWindGusts
        * potentialOf50mphWindGusts
        * potentialOf60mphWindGusts
        * grasslandFireDangerIndex
        * probabilityOfThunder
        * davisStabilityIndex
        * atmosphericDispersionIndex
        * lowVisibilityOccurrenceRiskIndex
        * stability
        * redFlagThreatIndex
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        '@id':
          format: uri
          type: string
        '@type':
          enum:
          - wx:Gridpoint
          type: string
        updateTime:
          format: date-time
          type: string
        validTimes:
          $ref: '#/components/schemas/ISO8601Interval'
        elevation:
          $ref: '#/components/schemas/QuantitativeValue'
        forecastOffice:
          format: uri
          type: string
        gridId:
          type: string
        gridX:
          minimum: 0
          type: integer
        gridY:
          minimum: 0
          type: integer
        weather:
          $ref: '#/components/schemas/Gridpoint_weather'
        hazards:
          $ref: '#/components/schemas/Gridpoint_hazards'
      type: object
    GridpointQuantitativeValueLayer:
      description: |
        A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).
      properties:
        uom:
          description: |
            A string denoting a unit of measure, expressed in the format "{unit}" or "{namespace}:{unit}".
            Units with the namespace "wmo" or "wmoUnit" are defined in the World Meteorological Organization Codes Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to http://codes.wmo.int/common/unit/{unit}.
            Units with the namespace "nwsUnit" are currently custom and do not align to any standard.
            Units with no namespace or the namespace "uc" are compliant with the Unified Code for Units of Measure syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO/DIS 19156).
            Namespaced units are considered deprecated. We will be aligning API to use the same standards as GML/IWXXM in the future.
          pattern: ^((wmo|uc|wmoUnit|nwsUnit):)?.*$
          type: string
        values:
          items:
            $ref: '#/components/schemas/GridpointQuantitativeValueLayer_values_inner'
          type: array
      required:
      - values
      type: object
    GridpointGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/Gridpoint'
        type: object
    GridpointJsonLd:
      $ref: '#/components/schemas/Gridpoint'
    GridpointForecast:
      additionalProperties: false
      description: A multi-day forecast for a 2.5km grid square.
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        units:
          $ref: '#/components/schemas/GridpointForecastUnits'
        forecastGenerator:
          description: The internal generator class used to create the forecast text
            (used for NWS debugging).
          type: string
        generatedAt:
          description: The time this forecast data was generated.
          format: date-time
          type: string
        updateTime:
          description: The last update time of the data this forecast was generated
            from.
          format: date-time
          type: string
        updated:
          deprecated: true
          description: This property is deprecated (use updateTime instead).
          format: date-time
          type: string
        validTimes:
          $ref: '#/components/schemas/ISO8601Interval'
        elevation:
          $ref: '#/components/schemas/QuantitativeValue'
        periods:
          description: An array of forecast periods.
          items:
            $ref: '#/components/schemas/GridpointForecastPeriod'
          type: array
      type: object
    GridpointForecastPeriod:
      additionalProperties: false
      description: |
        An object containing forecast information for a specific time period (generally 12-hour or 1-hour).
      properties:
        number:
          description: Sequential period number.
          minimum: 1
          type: integer
        name:
          description: |
            A textual identifier for the period. This value will not be present for hourly forecasts.
          example: Tuesday Night
          type: string
        startTime:
          description: The starting time that this forecast period is valid for.
          format: date-time
          type: string
        endTime:
          description: The ending time that this forecast period is valid for.
          format: date-time
          type: string
        isDaytime:
          description: Indicates whether this period is daytime or nighttime.
          type: boolean
        temperature:
          $ref: '#/components/schemas/GridpointForecastPeriod_temperature'
        temperatureUnit:
          deprecated: true
          description: |
            The unit of the temperature value (Fahrenheit or Celsius).
            This property is deprecated. Future versions will indicate the unit within the quantitative value object for the temperature property. To make use of the future standard format now, set the "forecast_temperature_qv" feature flag on the request.
          enum:
          - F
          - C
          type: string
        temperatureTrend:
          description: |
            If not null, indicates a non-diurnal temperature trend for the period (either rising temperature overnight, or falling temperature during the day)
          enum:
          - rising
          - falling
          nullable: true
          type: string
        probabilityOfPrecipitation:
          $ref: '#/components/schemas/QuantitativeValue'
        dewpoint:
          $ref: '#/components/schemas/QuantitativeValue'
        relativeHumidity:
          $ref: '#/components/schemas/QuantitativeValue'
        windSpeed:
          $ref: '#/components/schemas/GridpointForecastPeriod_windSpeed'
        windGust:
          $ref: '#/components/schemas/GridpointForecastPeriod_windGust'
        windDirection:
          description: "The prevailing direction of the wind for the period, using\
            \ a 16-point compass."
          enum:
          - "N"
          - NNE
          - NE
          - ENE
          - E
          - ESE
          - SE
          - SSE
          - S
          - SSW
          - SW
          - WSW
          - W
          - WNW
          - NW
          - NNW
          type: string
        icon:
          deprecated: true
          description: A link to an icon representing the forecast summary.
          format: uri
          type: string
        shortForecast:
          description: A brief textual forecast summary for the period.
          type: string
        detailedForecast:
          description: A detailed textual forecast for the period.
          type: string
      type: object
    GridpointForecastUnits:
      default: us
      description: Denotes the units used in the textual portions of the forecast.
      enum:
      - us
      - si
      type: string
    GridpointForecastGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/GridpointForecast'
        type: object
    GridpointForecastJsonLd:
      allOf:
      - $ref: '#/components/schemas/GridpointForecast'
      - properties:
          '@context':
            $ref: '#/components/schemas/JsonLdContext'
          geometry:
            $ref: '#/components/schemas/GeometryString'
        required:
        - '@context'
        - geometry
        type: object
    ISO8601Duration:
      description: A time duration in ISO 8601 format.
      example: P2DT12H
      pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?$
      type: string
    ISO8601Interval:
      description: |
        A time interval in ISO 8601 format. This can be one of:

            1. Start and end time
            2. Start time and duration
            3. Duration and end time
        The string "NOW" can also be used in place of a start/end time.
      oneOf:
      - example: 2007-03-01T13:00:00Z/2008-05-11T15:30:00Z
        pattern: "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\\
          /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$"
        type: string
      - example: 2007-03-01T13:00:00Z/P1Y2M10DT2H30M
        pattern: "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\\
          /P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
        type: string
      - example: P1Y2M10DT2H30M/2008-05-11T15:30:00Z
        pattern: "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?\\/(\\d{4}-\\\
          d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$"
        type: string
    JsonLdContext:
      anyOf:
      - items: {}
        type: array
      - type: object
    LandRegionCode:
      description: |
        Land region code. These correspond to the six NWS regional headquarters:
        * AR: Alaska Region
        * CR: Central Region
        * ER: Eastern Region
        * PR: Pacific Region
        * SR: Southern Region
        * WR: Western Region
      enum:
      - AR
      - CR
      - ER
      - PR
      - SR
      - WR
      type: string
    MarineAreaCode:
      description: |
        Marine area code as defined in NWS Directive 10-302:
        * AM: Western North Atlantic Ocean and along U.S. East Coast south of Currituck Beach Light NC following the coastline into Gulf of Mexico to Ocean Reef FL including the Caribbean
        * AN: Western North Atlantic Ocean and along U.S. East Coast from Canadian border south to Currituck Beach Light NC
        * GM: Gulf of Mexico and along the U.S. Gulf Coast from the Mexican border to Ocean Reef FL
        * LC: Lake St. Clair
        * LE: Lake Erie
        * LH: Lake Huron
        * LM: Lake Michigan
        * LO: Lake Ontario
        * LS: Lake Superior
        * PH: Central Pacific Ocean including Hawaiian waters
        * PK: North Pacific Ocean near Alaska and along Alaska coastline including the Bering Sea and the Gulf of Alaska
        * PM: Western Pacific Ocean including Mariana Island waters
        * PS: South Central Pacific Ocean including American Samoa waters
        * PZ: Eastern North Pacific Ocean and along U.S. West Coast from Canadian border to Mexican border
        * SL: St. Lawrence River above St. Regis
      enum:
      - AM
      - AN
      - GM
      - LC
      - LE
      - LH
      - LM
      - LO
      - LS
      - PH
      - PK
      - PM
      - PS
      - PZ
      - SL
      type: string
    MarineRegionCode:
      description: |
        Marine region code. These are groups of marine areas combined.
        * AL: Alaska waters (PK)
        * AT: Atlantic Ocean (AM, AN)
        * GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)
        * GM: Gulf of Mexico (GM)
        * PA: Eastern Pacific Ocean and U.S. West Coast (PZ)
        * PI: Central and Western Pacific (PH, PM, PS)
      enum:
      - AL
      - AT
      - GL
      - GM
      - PA
      - PI
      type: string
    MetarPhenomenon:
      additionalProperties: false
      description: An object representing a decoded METAR phenomenon string.
      properties:
        intensity:
          enum:
          - light
          - heavy
          nullable: true
          type: string
        modifier:
          enum:
          - patches
          - blowing
          - low_drifting
          - freezing
          - shallow
          - partial
          - showers
          nullable: true
          type: string
        weather:
          enum:
          - fog_mist
          - dust_storm
          - dust
          - drizzle
          - funnel_cloud
          - fog
          - smoke
          - hail
          - snow_pellets
          - haze
          - ice_crystals
          - ice_pellets
          - dust_whirls
          - spray
          - rain
          - sand
          - snow_grains
          - snow
          - squalls
          - sand_storm
          - thunderstorms
          - unknown
          - volcanic_ash
          type: string
        rawString:
          type: string
        inVicinity:
          type: boolean
      required:
      - intensity
      - modifier
      - rawString
      - weather
      type: object
    MetarSkyCoverage:
      enum:
      - OVC
      - BKN
      - SCT
      - FEW
      - SKC
      - CLR
      - VV
      type: string
    NWSCenterWeatherServiceUnitId:
      description: Three-letter identifier for a Center Weather Service Unit (CWSU).
      enum:
      - ZAB
      - ZAN
      - ZAU
      - ZBW
      - ZDC
      - ZDV
      - ZFA
      - ZFW
      - ZHU
      - ZID
      - ZJX
      - ZKC
      - ZLA
      - ZLC
      - ZMA
      - ZME
      - ZMP
      - ZNY
      - ZOA
      - ZOB
      - ZSE
      - ZTL
      type: string
    NWSForecastOfficeId:
      description: Three-letter identifier for a NWS office.
      enum:
      - AKQ
      - ALY
      - BGM
      - BOX
      - BTV
      - BUF
      - CAE
      - CAR
      - CHS
      - CLE
      - CTP
      - GSP
      - GYX
      - ILM
      - ILN
      - LWX
      - MHX
      - OKX
      - PBZ
      - PHI
      - RAH
      - RLX
      - RNK
      - ABQ
      - AMA
      - BMX
      - BRO
      - CRP
      - EPZ
      - EWX
      - FFC
      - FWD
      - HGX
      - HUN
      - JAN
      - JAX
      - KEY
      - LCH
      - LIX
      - LUB
      - LZK
      - MAF
      - MEG
      - MFL
      - MLB
      - MOB
      - MRX
      - OHX
      - OUN
      - SHV
      - SJT
      - SJU
      - TAE
      - TBW
      - TSA
      - ABR
      - APX
      - ARX
      - BIS
      - BOU
      - CYS
      - DDC
      - DLH
      - DMX
      - DTX
      - DVN
      - EAX
      - FGF
      - FSD
      - GID
      - GJT
      - GLD
      - GRB
      - GRR
      - ICT
      - ILX
      - IND
      - IWX
      - JKL
      - LBF
      - LMK
      - LOT
      - LSX
      - MKX
      - MPX
      - MQT
      - OAX
      - PAH
      - PUB
      - RIW
      - SGF
      - TOP
      - UNR
      - BOI
      - BYZ
      - EKA
      - FGZ
      - GGW
      - HNX
      - LKN
      - LOX
      - MFR
      - MSO
      - MTR
      - OTX
      - PDT
      - PIH
      - PQR
      - PSR
      - REV
      - SEW
      - SGX
      - SLC
      - STO
      - TFX
      - TWC
      - VEF
      - AER
      - AFC
      - AFG
      - AJK
      - ALU
      - GUM
      - HPA
      - HFO
      - PPG
      - STU
      - NH1
      - NH2
      - ONA
      - ONP
      type: string
    NWSNationalHQId:
      description: Three-letter identifier for NWS National HQ.
      enum:
      - NWS
      type: string
    NWSOfficeId:
      oneOf:
      - $ref: '#/components/schemas/NWSForecastOfficeId'
      - $ref: '#/components/schemas/NWSRegionalHQId'
      - $ref: '#/components/schemas/NWSNationalHQId'
    NWSRegionalHQId:
      description: Three-letter identifier for a NWS Regional HQ.
      enum:
      - ARH
      - CRH
      - ERH
      - PRH
      - SRH
      - WRH
      type: string
    NWSZoneID:
      description: |
        UGC identifier for a NWS forecast zone or county.
        The first two letters will correspond to either a state code or marine area code (see #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid letter combinations).
        The third letter will be Z for public/fire zone or C for county.
      pattern: "^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\\
        d{3}$"
      type: string
    NWSZoneType:
      enum:
      - land
      - marine
      - forecast
      - public
      - coastal
      - offshore
      - fire
      - county
      type: string
    Observation:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        '@id':
          format: uri
          type: string
        '@type':
          enum:
          - wx:ObservationStation
          type: string
        elevation:
          $ref: '#/components/schemas/QuantitativeValue'
        station:
          format: uri
          type: string
        timestamp:
          format: date-time
          type: string
        rawMessage:
          type: string
        textDescription:
          type: string
        icon:
          deprecated: true
          format: uri
          nullable: true
          type: string
        presentWeather:
          items:
            $ref: '#/components/schemas/MetarPhenomenon'
          type: array
        temperature:
          $ref: '#/components/schemas/QuantitativeValue'
        dewpoint:
          $ref: '#/components/schemas/QuantitativeValue'
        windDirection:
          $ref: '#/components/schemas/QuantitativeValue'
        windSpeed:
          $ref: '#/components/schemas/QuantitativeValue'
        windGust:
          $ref: '#/components/schemas/QuantitativeValue'
        barometricPressure:
          $ref: '#/components/schemas/QuantitativeValue'
        seaLevelPressure:
          $ref: '#/components/schemas/QuantitativeValue'
        visibility:
          $ref: '#/components/schemas/QuantitativeValue'
        maxTemperatureLast24Hours:
          $ref: '#/components/schemas/QuantitativeValue'
        minTemperatureLast24Hours:
          $ref: '#/components/schemas/QuantitativeValue'
        precipitationLastHour:
          $ref: '#/components/schemas/QuantitativeValue'
        precipitationLast3Hours:
          $ref: '#/components/schemas/QuantitativeValue'
        precipitationLast6Hours:
          $ref: '#/components/schemas/QuantitativeValue'
        relativeHumidity:
          $ref: '#/components/schemas/QuantitativeValue'
        windChill:
          $ref: '#/components/schemas/QuantitativeValue'
        heatIndex:
          $ref: '#/components/schemas/QuantitativeValue'
        cloudLayers:
          items:
            $ref: '#/components/schemas/Observation_cloudLayers_inner'
          nullable: true
          type: array
      type: object
    ObservationGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/Observation'
        type: object
    ObservationJsonLd:
      $ref: '#/components/schemas/Observation'
    ObservationCollectionGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeatureCollection'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/ObservationCollectionGeoJson_allOf_features'
            type: array
        type: object
    ObservationCollectionJsonLd:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@graph':
          items:
            $ref: '#/components/schemas/Observation'
          type: array
      type: object
    ObservationStation:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        '@id':
          format: uri
          type: string
        '@type':
          enum:
          - wx:ObservationStation
          type: string
        elevation:
          $ref: '#/components/schemas/QuantitativeValue'
        stationIdentifier:
          type: string
        name:
          type: string
        timeZone:
          format: iana-time-zone-identifier
          type: string
        forecast:
          description: A link to the NWS public forecast zone containing this station.
          format: uri
          type: string
        county:
          description: A link to the NWS county zone containing this station.
          format: uri
          type: string
        fireWeatherZone:
          description: A link to the NWS fire weather forecast zone containing this
            station.
          format: uri
          type: string
      type: object
    ObservationStationGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/ObservationStation'
        type: object
    ObservationStationJsonLd:
      allOf:
      - $ref: '#/components/schemas/ObservationStation'
      - properties:
          '@context':
            $ref: '#/components/schemas/JsonLdContext'
          geometry:
            $ref: '#/components/schemas/GeometryString'
        required:
        - '@context'
        - geometry
        type: object
    ObservationStationCollectionGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeatureCollection'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/ObservationStationCollectionGeoJson_allOf_features'
            type: array
          observationStations:
            items:
              format: uri
              type: string
            type: array
          pagination:
            $ref: '#/components/schemas/PaginationInfo'
        type: object
    ObservationStationCollectionJsonLd:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@graph':
          items:
            $ref: '#/components/schemas/ObservationStation'
          type: array
        observationStations:
          items:
            format: uri
            type: string
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    Office:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@type':
          enum:
          - GovernmentOrganization
          type: string
        '@id':
          format: uri
          type: string
        id:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Office_address'
        telephone:
          type: string
        faxNumber:
          type: string
        email:
          type: string
        sameAs:
          format: uri
          type: string
        nwsRegion:
          type: string
        parentOrganization:
          format: uri
          type: string
        responsibleCounties:
          items:
            format: uri
            type: string
          type: array
        responsibleForecastZones:
          items:
            format: uri
            type: string
          type: array
        responsibleFireZones:
          items:
            format: uri
            type: string
          type: array
        approvedObservationStations:
          items:
            format: uri
            type: string
          type: array
      type: object
    OfficeHeadline:
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@id':
          format: uri
          type: string
        id:
          type: string
        office:
          format: uri
          type: string
        important:
          type: boolean
        issuanceTime:
          format: date-time
          type: string
        link:
          format: uri
          type: string
        name:
          type: string
        title:
          type: string
        summary:
          nullable: true
          type: string
        content:
          type: string
      type: object
    OfficeHeadlineCollection:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@graph':
          items:
            $ref: '#/components/schemas/OfficeHeadline'
          type: array
      required:
      - '@context'
      - '@graph'
      type: object
    PaginationInfo:
      additionalProperties: false
      description: Links for retrieving more data from paged data sets
      properties:
        next:
          description: A link to the next page of records
          format: uri
          type: string
      required:
      - next
      type: object
    Point:
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        '@id':
          format: uri
          type: string
        '@type':
          enum:
          - wx:Point
          type: string
        cwa:
          $ref: '#/components/schemas/NWSForecastOfficeId'
        forecastOffice:
          format: uri
          type: string
        gridId:
          $ref: '#/components/schemas/NWSForecastOfficeId'
        gridX:
          minimum: 0
          type: integer
        gridY:
          minimum: 0
          type: integer
        forecast:
          format: uri
          type: string
        forecastHourly:
          format: uri
          type: string
        forecastGridData:
          format: uri
          type: string
        observationStations:
          format: uri
          type: string
        relativeLocation:
          $ref: '#/components/schemas/Point_relativeLocation'
        forecastZone:
          format: uri
          type: string
        county:
          format: uri
          type: string
        fireWeatherZone:
          format: uri
          type: string
        timeZone:
          type: string
        radarStation:
          type: string
      type: object
    PointGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/Point'
        type: object
    PointJsonLd:
      allOf:
      - $ref: '#/components/schemas/Point'
      - properties:
          '@context':
            $ref: '#/components/schemas/JsonLdContext'
          geometry:
            $ref: '#/components/schemas/GeometryString'
        required:
        - '@context'
        - geometry
        type: object
    PointString:
      pattern: "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$"
      type: string
    ProblemDetail:
      additionalProperties: true
      description: Detail about an error. This document conforms to RFC 7807 (Problem
        Details for HTTP APIs).
      properties:
        type:
          default: about:blank
          description: |
            A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is not necessarily a resolvable URL.
          example: urn:noaa:nws:api:UnexpectedProblem
          format: uri
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          example: Unexpected Problem
          type: string
        status:
          description: |
            The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence of the problem.
          example: 500
          maximum: 999
          minimum: 100
          type: number
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: An unexpected problem has occurred.
          type: string
        instance:
          description: |
            A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only an identifier and is not necessarily a resolvable URL.
          example: urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63
          format: uri
          type: string
        correlationId:
          description: |
            A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
          example: 493c3a1d-f87e-407f-ae2c-24483f5aab63
          type: string
      required:
      - correlationId
      - detail
      - instance
      - status
      - title
      - type
      type: object
    QuantitativeValue:
      additionalProperties: false
      description: |
        A structured value representing a measurement and its unit of measure. This object is a slighly modified version of the schema.org definition at https://schema.org/QuantitativeValue
      properties:
        value:
          description: A measured value
          nullable: true
          type: number
        maxValue:
          description: The maximum value of a range of measured values
          type: number
        minValue:
          description: The minimum value of a range of measured values
          type: number
        unitCode:
          description: |
            A string denoting a unit of measure, expressed in the format "{unit}" or "{namespace}:{unit}".
            Units with the namespace "wmo" or "wmoUnit" are defined in the World Meteorological Organization Codes Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to http://codes.wmo.int/common/unit/{unit}.
            Units with the namespace "nwsUnit" are currently custom and do not align to any standard.
            Units with no namespace or the namespace "uc" are compliant with the Unified Code for Units of Measure syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO/DIS 19156).
            Namespaced units are considered deprecated. We will be aligning API to use the same standards as GML/IWXXM in the future.
          pattern: ^((wmo|uc|wmoUnit|nwsUnit):)?.*$
          type: string
        qualityControl:
          description: |
            For values in observation records, the quality control flag from the MADIS system. The definitions of these flags can be found at https://madis.ncep.noaa.gov/madis_sfc_qc_notes.shtml
          enum:
          - Z
          - C
          - S
          - V
          - X
          - Q
          - G
          - B
          - T
          type: string
      type: object
    RegionCode:
      oneOf:
      - $ref: '#/components/schemas/LandRegionCode'
      - $ref: '#/components/schemas/MarineRegionCode'
    RelativeLocation:
      properties:
        city:
          type: string
        state:
          type: string
        distance:
          $ref: '#/components/schemas/QuantitativeValue'
        bearing:
          $ref: '#/components/schemas/QuantitativeValue'
      type: object
    RelativeLocationGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/RelativeLocation'
        type: object
    RelativeLocationJsonLd:
      allOf:
      - $ref: '#/components/schemas/RelativeLocation'
      - properties:
          geometry:
            $ref: '#/components/schemas/GeometryString'
        required:
        - geometry
        type: object
    Sigmet:
      additionalProperties: false
      properties:
        id:
          format: uri
          type: string
        issueTime:
          format: date-time
          type: string
        fir:
          nullable: true
          type: string
        atsu:
          description: ATSU Identifier
          pattern: "^[A-Z]{3,4}$"
          type: string
        sequence:
          nullable: true
          type: string
        phenomenon:
          format: uri
          nullable: true
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      type: object
    SigmetCollectionGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeatureCollection'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/SigmetGeoJson'
            type: array
        type: object
    SigmetGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/Sigmet'
        type: object
    SigmetSequenceNumber:
      type: string
    StateTerritoryCode:
      enum:
      - AL
      - AK
      - AS
      - AR
      - AZ
      - CA
      - CO
      - CT
      - DE
      - DC
      - FL
      - GA
      - GU
      - HI
      - ID
      - IL
      - IN
      - IA
      - KS
      - KY
      - LA
      - ME
      - MD
      - MA
      - MI
      - MN
      - MS
      - MO
      - MT
      - NE
      - NV
      - NH
      - NJ
      - NM
      - NY
      - NC
      - ND
      - OH
      - OK
      - OR
      - PA
      - PR
      - RI
      - SC
      - SD
      - TN
      - TX
      - UT
      - VT
      - VI
      - VA
      - WA
      - WV
      - WI
      - WY
      - MP
      - PW
      - FM
      - MH
      type: string
    TextProduct:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@id':
          format: uri
          type: string
        id:
          type: string
        wmoCollectiveId:
          type: string
        issuingOffice:
          type: string
        issuanceTime:
          format: date-time
          type: string
        productCode:
          type: string
        productName:
          type: string
        productText:
          type: string
      type: object
    TextProductCollection:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@graph':
          items:
            $ref: '#/components/schemas/TextProduct'
          type: array
      type: object
    TextProductTypeCollection:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@graph':
          items:
            $ref: '#/components/schemas/TextProductTypeCollection__graph_inner'
          type: array
      type: object
    TextProductLocationCollection:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        locations:
          additionalProperties:
            nullable: true
            type: string
          type: object
      type: object
    Time:
      description: A time (in HHMM format). This is always specified in UTC (Zulu)
        time.
      pattern: "^([01][0-9]|2[0-3])[0-5][0-9]$"
      type: string
    UnitOfMeasure:
      description: |
        A string denoting a unit of measure, expressed in the format "{unit}" or "{namespace}:{unit}".
        Units with the namespace "wmo" or "wmoUnit" are defined in the World Meteorological Organization Codes Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to http://codes.wmo.int/common/unit/{unit}.
        Units with the namespace "nwsUnit" are currently custom and do not align to any standard.
        Units with no namespace or the namespace "uc" are compliant with the Unified Code for Units of Measure syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO/DIS 19156).
        Namespaced units are considered deprecated. We will be aligning API to use the same standards as GML/IWXXM in the future.
      pattern: ^((wmo|uc|wmoUnit|nwsUnit):)?.*$
      type: string
    Zone:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        '@id':
          format: uri
          type: string
        '@type':
          enum:
          - wx:Zone
          type: string
        id:
          description: |
            UGC identifier for a NWS forecast zone or county.
            The first two letters will correspond to either a state code or marine area code (see #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid letter combinations).
            The third letter will be Z for public/fire zone or C for county.
          pattern: "^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\\
            d{3}$"
          type: string
        type:
          $ref: '#/components/schemas/NWSZoneType'
        name:
          type: string
        effectiveDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/Zone_state'
        cwa:
          items:
            $ref: '#/components/schemas/NWSForecastOfficeId'
          type: array
        forecastOffices:
          items:
            format: uri
            type: string
          type: array
        timeZone:
          items:
            format: iana-time-zone-identifier
            type: string
          type: array
        observationStations:
          items:
            format: uri
            type: string
          type: array
        radarStation:
          nullable: true
          type: string
      type: object
    ZoneGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/Zone'
        type: object
    ZoneJsonLd:
      $ref: '#/components/schemas/Zone'
    ZoneCollectionGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeatureCollection'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/ZoneCollectionGeoJson_allOf_features'
            type: array
        type: object
    ZoneCollectionJsonLd:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        '@graph':
          items:
            $ref: '#/components/schemas/Zone'
          type: array
      type: object
    ZoneForecast:
      additionalProperties: false
      description: An object representing a zone area forecast.
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        geometry:
          description: A geometry represented in Well-Known Text (WKT) format.
          format: wkt
          nullable: true
          type: string
        zone:
          description: An API link to the zone this forecast is for.
          format: uri
          type: string
        updated:
          description: The time this zone forecast product was published.
          format: date-time
          type: string
        periods:
          description: An array of forecast periods.
          items:
            $ref: '#/components/schemas/ZoneForecast_periods_inner'
          type: array
      type: object
    ZoneForecastGeoJson:
      allOf:
      - $ref: '#/components/schemas/GeoJsonFeature'
      - properties:
          properties:
            $ref: '#/components/schemas/ZoneForecast'
        type: object
    ZoneForecastJsonLd:
      $ref: '#/components/schemas/ZoneForecast'
    alerts_active_count_200_response:
      properties:
        total:
          description: The total number of active alerts
          minimum: 0
          type: integer
        land:
          description: The total number of active alerts affecting land zones
          minimum: 0
          type: integer
        marine:
          description: The total number of active alerts affecting marine zones
          minimum: 0
          type: integer
        regions:
          additionalProperties:
            minimum: 1
            type: integer
          description: Active alerts by marine region
          type: object
        areas:
          additionalProperties:
            minimum: 1
            type: integer
          description: Active alerts by area (state/territory)
          type: object
        zones:
          additionalProperties:
            minimum: 1
            type: integer
          description: Active alerts by NWS public zone or county code
          type: object
      type: object
    alerts_types_200_response:
      properties:
        eventTypes:
          description: A list of recognized event types
          items:
            type: string
          type: array
      type: object
    glossary_200_response_glossary_inner:
      properties:
        term:
          description: The term being defined
          type: string
        definition:
          description: A definition for the term
          type: string
      type: object
    glossary_200_response:
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        glossary:
          description: A list of glossary terms
          items:
            $ref: '#/components/schemas/glossary_200_response_glossary_inner'
          type: array
      type: object
    icons_size_parameter:
      anyOf:
      - enum:
        - small
        - medium
        - large
        type: string
      - maximum: 500
        minimum: 10
        type: integer
    icons_summary_200_response_icons_value:
      additionalProperties: false
      properties:
        description:
          type: string
      required:
      - description
      type: object
    icons_summary_200_response:
      additionalProperties: false
      properties:
        '@context':
          $ref: '#/components/schemas/JsonLdContext'
        icons:
          additionalProperties:
            $ref: '#/components/schemas/icons_summary_200_response_icons_value'
          type: object
      required:
      - icons
      type: object
    Alert_geocode:
      description: Lists of codes for NWS public zones and counties affected by the
        alert.
      properties:
        UGC:
          description: A list of NWS public zone or county identifiers.
          items:
            $ref: '#/components/schemas/NWSZoneID'
          type: array
        SAME:
          description: A list of SAME (Specific Area Message Encoding) codes for affected
            counties.
          items:
            pattern: "^\\d{6}$"
            type: string
          type: array
      type: object
    Alert_references_inner:
      properties:
        '@id':
          description: An API link to the prior alert.
          format: uri
          type: string
        identifier:
          description: The identifier of the alert message.
          type: string
        sender:
          description: The sender of the prior alert.
          type: string
        sent:
          description: The time the prior alert was sent.
          format: date-time
          type: string
      type: object
    AlertCollectionGeoJson_allOf_features:
      properties:
        properties:
          $ref: '#/components/schemas/Alert'
      type: object
      example: null
    AlertAtomEntry_author:
      properties:
        name:
          type: string
      type: object
      xml:
        namespace: http://www.w3.org/2005/Atom
    AlertAtomFeed_author:
      properties:
        name:
          type: string
          xml:
            namespace: http://www.w3.org/2005/Atom
      type: object
      xml:
        namespace: http://www.w3.org/2005/Atom
    CenterWeatherAdvisoryCollectionGeoJson_allOf_features:
      properties:
        properties:
          $ref: '#/components/schemas/CenterWeatherAdvisory'
      type: object
      example: null
    GeoJSON_Point:
      properties:
        type:
          enum:
          - Point
          - LineString
          - Polygon
          - MultiPoint
          - MultiLineString
          - MultiPolygon
          type: string
        coordinates:
          description: A GeoJSON coordinate. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 2
          type: array
        bbox:
          description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 4
          type: array
      required:
      - coordinates
      - type
      title: GeoJSON Point
      type: object
    GeoJSON_LineString:
      properties:
        type:
          enum:
          - LineString
          type: string
        coordinates:
          description: A GeoJSON line string. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            $ref: '#/components/schemas/GeoJsonCoordinate'
          minItems: 2
          type: array
        bbox:
          description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 4
          type: array
      required:
      - coordinates
      - type
      title: GeoJSON LineString
      type: object
    GeoJSON_Polygon:
      properties:
        type:
          enum:
          - Polygon
          type: string
        coordinates:
          description: A GeoJSON polygon. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            items:
              $ref: '#/components/schemas/GeoJsonCoordinate'
            minItems: 4
            type: array
          type: array
        bbox:
          description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 4
          type: array
      required:
      - coordinates
      - type
      title: GeoJSON Polygon
      type: object
    GeoJSON_MultiPoint:
      properties:
        type:
          enum:
          - MultiPoint
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/GeoJsonCoordinate'
          type: array
        bbox:
          description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 4
          type: array
      required:
      - coordinates
      - type
      title: GeoJSON MultiPoint
      type: object
    GeoJSON_MultiLineString:
      properties:
        type:
          enum:
          - MultiLineString
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/GeoJsonLineString'
          type: array
        bbox:
          description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 4
          type: array
      required:
      - coordinates
      - type
      title: GeoJSON MultiLineString
      type: object
    GeoJSON_MultiPolygon:
      properties:
        type:
          enum:
          - MultiPolygon
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/GeoJsonPolygon'
          type: array
        bbox:
          description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information
            on the GeoJSON format.
          items:
            type: number
          minItems: 4
          type: array
      required:
      - coordinates
      - type
      title: GeoJSON MultiPolygon
      type: object
    Gridpoint_weather_values_inner_value_inner:
      additionalProperties: false
      description: A value object representing expected weather phenomena.
      properties:
        coverage:
          enum:
          - areas
          - brief
          - chance
          - definite
          - few
          - frequent
          - intermittent
          - isolated
          - likely
          - numerous
          - occasional
          - patchy
          - periods
          - scattered
          - slight_chance
          - widespread
          nullable: true
          type: string
        weather:
          enum:
          - blowing_dust
          - blowing_sand
          - blowing_snow
          - drizzle
          - fog
          - freezing_fog
          - freezing_drizzle
          - freezing_rain
          - freezing_spray
          - frost
          - hail
          - haze
          - ice_crystals
          - ice_fog
          - rain
          - rain_showers
          - sleet
          - smoke
          - snow
          - snow_showers
          - thunderstorms
          - volcanic_ash
          - water_spouts
          nullable: true
          type: string
        intensity:
          enum:
          - very_light
          - light
          - moderate
          - heavy
          nullable: true
          type: string
        visibility:
          $ref: '#/components/schemas/QuantitativeValue'
        attributes:
          items:
            enum:
            - damaging_wind
            - dry_thunderstorms
            - flooding
            - gusty_wind
            - heavy_rain
            - large_hail
            - small_hail
            - tornadoes
            type: string
          type: array
      required:
      - attributes
      - coverage
      - intensity
      - visibility
      - weather
      type: object
    Gridpoint_weather_values_inner:
      additionalProperties: false
      properties:
        validTime:
          $ref: '#/components/schemas/ISO8601Interval'
        value:
          items:
            $ref: '#/components/schemas/Gridpoint_weather_values_inner_value_inner'
          type: array
      required:
      - validTime
      - value
      type: object
    Gridpoint_weather:
      properties:
        values:
          items:
            $ref: '#/components/schemas/Gridpoint_weather_values_inner'
          type: array
      required:
      - values
      type: object
    Gridpoint_hazards_values_inner_value_inner:
      description: A value object representing an expected hazard.
      properties:
        phenomenon:
          description: |
            Hazard code. This value will correspond to a P-VTEC phenomenon code as defined in NWS Directive 10-1703.
          pattern: "^\\w{2}$"
          type: string
        significance:
          description: |
            Significance code. This value will correspond to a P-VTEC significance code as defined in NWS Directive 10-1703.
            This will most frequently be "A" for a watch or "Y" for an advisory.
          pattern: ^\w$
          type: string
        event_number:
          description: |
            Event number. If this hazard refers to a national or regional center product (such as a Storm Prediction Center convective watch), this value will be the sequence number of that product.
          nullable: true
          type: integer
      required:
      - event_number
      - phenomenon
      - significance
      type: object
    Gridpoint_hazards_values_inner:
      additionalProperties: false
      properties:
        validTime:
          $ref: '#/components/schemas/ISO8601Interval'
        value:
          items:
            $ref: '#/components/schemas/Gridpoint_hazards_values_inner_value_inner'
          type: array
      required:
      - validTime
      - value
      type: object
    Gridpoint_hazards:
      properties:
        values:
          items:
            $ref: '#/components/schemas/Gridpoint_hazards_values_inner'
          type: array
      required:
      - values
      type: object
    GridpointQuantitativeValueLayer_values_inner:
      additionalProperties: false
      properties:
        validTime:
          $ref: '#/components/schemas/ISO8601Interval'
        value:
          nullable: true
          type: number
      required:
      - validTime
      - value
      type: object
    GridpointForecastPeriod_temperature:
      description: |
        High/low temperature for the period, depending on whether the period is day or night.
        This property as an integer value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the "forecast_temperature_qv" feature flag on the request.
      oneOf:
      - $ref: '#/components/schemas/QuantitativeValue'
      - type: integer
    GridpointForecastPeriod_windSpeed:
      description: |
        Wind speed for the period.
        This property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the "forecast_wind_speed_qv" feature flag on the request.
      oneOf:
      - $ref: '#/components/schemas/QuantitativeValue'
      - type: string
    GridpointForecastPeriod_windGust:
      description: |
        Peak wind gust for the period.
        This property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the "forecast_wind_speed_qv" feature flag on the request.
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/QuantitativeValue'
      - type: string
    Observation_cloudLayers_inner:
      additionalProperties: false
      properties:
        base:
          $ref: '#/components/schemas/QuantitativeValue'
        amount:
          $ref: '#/components/schemas/MetarSkyCoverage'
      required:
      - amount
      - base
      type: object
    ObservationCollectionGeoJson_allOf_features:
      properties:
        properties:
          $ref: '#/components/schemas/Observation'
      type: object
      example: null
    ObservationStationCollectionGeoJson_allOf_features:
      properties:
        properties:
          $ref: '#/components/schemas/ObservationStation'
      type: object
      example: null
    Office_address:
      additionalProperties: false
      properties:
        '@type':
          enum:
          - PostalAddress
          type: string
        streetAddress:
          type: string
        addressLocality:
          type: string
        addressRegion:
          type: string
        postalCode:
          type: string
      type: object
    Point_relativeLocation:
      oneOf:
      - $ref: '#/components/schemas/RelativeLocationGeoJson'
      - $ref: '#/components/schemas/RelativeLocationJsonLd'
    TextProductTypeCollection__graph_inner:
      additionalProperties: false
      properties:
        productCode:
          type: string
        productName:
          type: string
      required:
      - productCode
      - productName
      type: object
    Zone_state:
      oneOf:
      - $ref: '#/components/schemas/StateTerritoryCode'
      - enum:
        - ""
        nullable: true
        type: string
    ZoneCollectionGeoJson_allOf_features:
      properties:
        properties:
          $ref: '#/components/schemas/Zone'
      type: object
      example: null
    ZoneForecast_periods_inner:
      additionalProperties: false
      properties:
        number:
          description: A sequential identifier number.
          type: integer
        name:
          description: A textual description of the period.
          example: This Afternoon
          type: string
        detailedForecast:
          description: A detailed textual forecast for the period.
          type: string
      required:
      - detailedForecast
      - name
      - number
      type: object
  securitySchemes:
    userAgent:
      description: |
        We require that all consumers of the API include a User-Agent header in requests. This is due to a high number of scripts exhibiting abusive behavior (intentional or unintentional). We recommend setting the value to something that identifies your application and includes a contact email. This will help us contact you if we notice unusual behavior and also aid in troubleshooting issues.
        The API remains open and free to use and there are no limits imposed based on the User-Agent string.
        This mechanism will be replaced with a more typical API key system at a later date.
      in: header
      name: User-Agent
      type: apiKey

